name: Publish to pub.dev

on:
  workflow_dispatch:
  push:
    tags:
    # must align with the tag-pattern configured on pub.dev, often just replace
      # {{version}} with [0-9]+.[0-9]+.[0-9]+
    - 'v[0-9]+.[0-9]+.[0-9]+' # tag-pattern on pub.dev: 'v{{version}}'
    # If you prefer tags like '1.2.3', without the 'v' prefix, then use:
    # - '[0-9]+.[0-9]+.[0-9]+' # tag-pattern on pub.dev: '{{version}}'
    # If your repository contains multiple packages consider a pattern like:
    # - 'my_package_name-v[0-9]+.[0-9]+.[0-9]+'

# Publish using the reusable workflow from dart-lang.
jobs:
  publish:
    name: 'Publish to pub.dev'
    permissions:
      id-token: write # This is required for requesting the JWT
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v4
      # Set up the Dart SDK and provision the OIDC token used for publishing.
      # The `dart` command from this step will be shadowed by the one from the
      # Flutter SDK below. 
      - uses: dart-lang/setup-dart@e630b99d28a3b71860378cafdc2a067c71107f94
      # Download flutter SDK - needed for publishing Flutter packages. Can also
      # publish pure Dart packages.
      #
      # The dart binary from a Flutter SDK facilitates publishing both Flutter
      # and pure-dart packages.
      - uses: flutter-actions/setup-flutter@54feb1e258158303e041b9eaf89314dcfbf6d38a
      # Minimal package setup and dry run checks.
      - name: Install dependencies
        run: dart pub get
      # Publishing...
      - name: Publish to pub.dev
        run: dart pub publish -f