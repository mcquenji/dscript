schema "";	

author "McQuenji";
version 0.0.1;
name "TestScript";
description "Random number generator.";
description "For testing purposes.";
license "MIT";
website "https://example.com";
repo "https://github.com/mcquenji/dscript";

permissions fs::read, fs::write;
permissions http::client, http::server;
permissions external::math;

contract Random {
  impl randomNumber(int foo) -> double {
    log::info(string::from(5));

    if(5 == foo) {
      return 1.0;
    }else if(5 < foo && foo < 10) {
      return 4;
    }else {
      return external::double(math::floor(foo * pi));
    }
  }


  impl randomString() -> string 
  {
    while(true) {
      log::info("Generating random string...");
      break;
    }

    return "Random String";
  }

  impl test() -> void {
    final string? test = "Test";

    return;

    var string? nonNullable;

     final bool test2 = false;

     //test = "Test2";

     var p = 1.3;
     p = 2.0;

     return;
  }

  hook onLogout() {
    // Hook implementation
    // return "Logout successful!";
  }

  hook onLogin(User user) {
    // Hook implementation

    // return math::floor(1.5);

    log::info("User logged in: " + user.name);

    final User? test = @User {
      name: "TestUser",
      id : 12345
    };

    final  map = {"key1": user};
    final array = [1, 2, 3, 4, 5];

    log::info("Map: " + map["key1"].name);

    final int x = array[1]!;
    final string name = test!.name;
  }

}