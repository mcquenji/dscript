schema "";	

author "McQuenji";
version 0.0.1;
name "TestScript";
description "Random number generator.";
description "For testing purposes.";
license "MIT";
website "https://example.com";
repo "https://github.com/mcquenji/dscript";

permissions fs::read, fs::write;
permissions http::client, http::server;
permissions external::math;

contract Random {
  const bar = 5;

  impl randomNumber(int foo) -> double {
    log::info("Random number generated: " + foo, error: "Test error");

      final test = @User {
        name: "TestUser",
        id : 12345
      };

      final name = test.name;
      test.id = 67890;

      final List<int>? arr = [1, 2, 3, 4, 5];

      //final int x = arr?[1]!;

      //arr?[2] = 10;


      return 1.0;


    //log::info(string::from(5 + bar));
//
//
    ///if(5 == foo) {
    ///}else if(foo > 5) {
    ///  return 2.0 * bar;
    ///}else{
    ///      return foo * bar + 1.0;
///
    ///}
    //else if(5 < foo && foo < 10) {
    //  return 4 *bar;
    //}else {
    //  return external::double(math::floor(foo * pi));
    //}

  }


  impl randomString() -> string 
  {
  //  while(true) {
  //    log::info("Generating random string...");
  //    break;
  //  }
//
  //   try {
  //    log::info("test");
  //    return 'test';
  //  } catch (e) {
  //    log::error("Error", error: e);
  //    return e.message;
  //  }

  return "RandomString";
  }

  impl test() -> void {
    final string? test = "Test";

    return;

    var string? nonNullable;

     final bool test2 = false;

     //test = "Test2";

     var p = 1.3;
     p = 2.0;

     return;
  }

  hook onLogout() {
    // Hook implementation
    // return "Logout successful!";
  }

  hook onLogin(User user) {
    // Hook implementation

    // return math::floor(1.5);

    //log::info("User logged in: " + user.name);

    //final User? test = @User {
    //  name: "TestUser",
    //  id : 12345
    //};
//
  //
//
    //final  map = {"key1": user};
    //final array = [1, 2, 3, 4, 5];
//
    //log::info("Map: " + map["key1"].name);
//
    //final int x = array[1]!;
    //final string name = test!.name;
  }

}